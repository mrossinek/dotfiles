# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  TERM: xterm-256color

window:
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  # (changes require restart)
  dimensions:
    columns: 0
    lines: 0

  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  # (changes require restart)
  #position:
  #  x: 0
  #  y: 0

  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  # (changes require restart)
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  decorations: full

  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  # (changes require restart)
  startup_mode: Windowed

  title: Alacritty
  class: Alacritty

scrolling:
  # Specifying '0' will disable scrolling.
  history: 10000
  # Number of lines the viewport will move for every line scrolled
  multiplier: 3

  # The `faux_multiplier` setting controls the number of lines the terminal
  # should scroll when the alternate screen buffer is active. This is used
  # to allow mouse scrolling for applications like `man`.
  # 0 = disabled
  faux_multiplier: 3

  auto_scroll: false

# (changes require restart)
tabspaces: 4

# (changes require restart)
font:
  normal:
    family: monospace
    style: Regular

  bold:
    family: monospace
    style: Bold

  italic:
    family: monospace
    style: Italic

  size: 12.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  # (macOS only)
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

colors:
    primary:
        background: '0x303030'
        foreground: '0xf2f2f2'
        # The dimmed foreground color is calculated automatically if it is not present.
        # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
        # is `false`, the normal foreground color will be used.
        #dim_foreground: '0x9a9a9a'
        bright_foreground: '0xffffff'

    # If these are unset, the cursor color will be the inverse of the cell color.
    #cursor:
    #  text: '0x000000'
    #  cursor: '0xffffff'

    # If selection background is unset, selection color will be the inverse of
    # the cell colors. If only text is unset the cell text color will remain the
    # same.
    #selection:
    #  text: '0xeaeaea'
    #  background: '0x404040'

    # Normal colors
    normal:
        black:   '0x2c2c2c'
        red:     '0xc62828'
        green:   '0x558b2e'
        yellow:  '0xf9a825'
        blue:    '0x1565c1'
        magenta: '0x8e42be'
        cyan:    '0x00838f'
        white:   '0xffffff'

    # Bright colors
    bright:
        black:   '0x969694'
        red:     '0xf15250'
        green:   '0x86bd47'
        yellow:  '0xf8e63a'
        blue:    '0x77b2f6'
        magenta: '0xb933a8'
        cyan:    '0x25c3dc'
        white:   '0xffffff'

    # If the dim colors are not set, they will be calculated
    # automatically based on the `normal` colors.
    #dim:

    # The indexed colors include all colors from 16 to 256.
    # When these are not set, they're filled with sensible defaults.
    indexed_colors: []

# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
visual_bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0

# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: true

  url:
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # None = disabled
    #launcher:
    #  program: xdg-open
    #  args: []

    # These are the modifiers that need to be held down for opening URLs when
    # clicking on them.
    modifiers: Shift

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

dynamic_title: true

cursor:
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block
  unfocused_hollow: true

# (changes require restart)
live_config_reload: true

# Entries in `shell.args` are passed unmodified as arguments to the shell.
shell:
  program: /bin/zsh

# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# (Windows only)
enable_experimental_conpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

debug:
  render_timer: false
  persistent_logging: false

  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn
  print_events: false
  ref_test: false

# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  # (Windows/Linux only)
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Equals,   mods: Control,       action: ResetFontSize    }
  - { key: Add,      mods: Control|Shift, action: IncreaseFontSize }
  - { key: Subtract, mods: Control,       action: DecreaseFontSize }
  - { key: Return,   mods: Shift  ,       chars: "\x1b[1;2P" }
  - { key: Return,   mods: Control,       chars: "\x1b[1;2Q" }
  - { key: Space,    mods: Alt,           chars: "\x1b "     }
  - { key: H,        mods: Alt,           chars: "\x1bh"     }
  - { key: J,        mods: Alt,           chars: "\x1bj"     }
  - { key: K,        mods: Alt,           chars: "\x1bk"     }
  - { key: L,        mods: Alt,           chars: "\x1bl"     }
  - { key: H,        mods: Alt|Shift,     chars: "\x1bH"     }
  - { key: J,        mods: Alt|Shift,     chars: "\x1bJ"     }
  - { key: K,        mods: Alt|Shift,     chars: "\x1bK"     }
  - { key: L,        mods: Alt|Shift,     chars: "\x1bL"     }
